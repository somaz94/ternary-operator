name: Example Workflow using Ternary Operator Action

on:
  workflow_dispatch:
    inputs:
      run:
        description: 'workflow run'
        required: true
        default: 'true'
      environment:
        type: environment
        description: Select the environment
        required: false
      branch:
        type: choice
        options:
          - qa
          - dev
        description: Select the branch
        required: false
        default: qa
      test:
        type: string
        description: Select the test
        required: false
      service:
        description: Which service to be built. game or batch or etc...
        required: false
        type: choice
        options:
          - game
          - batch
      env:
        type: string
        description: Select the env
        required: false
  workflow_run:
    workflows: ["Create release"]
    types:
      - completed

permissions:
  contents: read

jobs:
  action-module:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set Variable
        id: set_vars
        uses: somaz94/env-output-setter@v1
        with:
          env_key: 'SERVICE,ENVIRONMENT,TEST,ENV,BRANCH'
          env_value: "${{ github.event.inputs.service || 'game' }},${{ github.event.inputs.environment || 'qa' }},${{ github.event.inputs.test || 'prod' }},${{ github.event.inputs.env || 'xov' }},${{ github.event.inputs.branch || 'qa' }}"
          output_key: 'SERVICE,ENVIRONMENT,TEST,ENV,BRANCH'
          output_value: "${{ github.event.inputs.service || 'game' }},${{ github.event.inputs.environment || 'qa' }},${{ github.event.inputs.test || 'prod' }},${{ github.event.inputs.env || 'xov' }},${{ github.event.inputs.branch || 'qa' }}"

      - name: Evaluate Conditions
        uses: somaz94/ternary-operator@v1
        id: ternary
        with:
          conditions: >-
            SERVICE == game || SERVICE == batch,
            ENVIRONMENT == dev,
            TEST == prod,
            ENV == xov,
            BRANCH == dev,
            SERVICE == game,
            ENVIRONMENT == qa,
            TEST == stage,
            ENV == dev,
            BRANCH == main
          true_values: >-
            service-true,environment-true,test-true,env-true,branch-true,
            service-true-2,environment-true-2,test-true-2,env-true-2,branch-true-2
          false_values: >-
            service-false,environment-false,test-false,env-false,branch-false,
            service-false-2,environment-false-2,test-false-2,env-false-2,branch-false-2
          debug_mode: true
          
      - name: Print Output
        run: |
          echo "First condition result: ${{ steps.ternary.outputs.output_1 }}"
          echo "Second condition result: ${{ steps.ternary.outputs.output_2 }}"
          echo "Third condition result: ${{ steps.ternary.outputs.output_3 }}"
          echo "Fourth condition result: ${{ steps.ternary.outputs.output_4 }}"
          echo "Fifth condition result: ${{ steps.ternary.outputs.output_5 }}"
          echo "Sixth condition result: ${{ steps.ternary.outputs.output_6 }}"
          echo "Seventh condition result: ${{ steps.ternary.outputs.output_7 }}"
          echo "Eighth condition result: ${{ steps.ternary.outputs.output_8 }}"
          echo "Ninth condition result: ${{ steps.ternary.outputs.output_9 }}"
          echo "Tenth condition result: ${{ steps.ternary.outputs.output_10 }}"

      - name: Test Error Case
        id: ternary_error
        continue-on-error: true
        uses: somaz94/ternary-operator@v1
        with:
          conditions: >-
            SERVICE == game || SERVICE == batch,
            ENVIRONMENT == dev,
            TEST == prod,
            ENV == xov,
            BRANCH == dev,
            SERVICE == game,
            ENVIRONMENT == qa,
            TEST == stage,
            ENV == dev,
            BRANCH == main,
            EXTRA == test
          true_values: >-
            service-true,environment-true,test-true,env-true,branch-true,
            service-true-2,environment-true-2,test-true-2,env-true-2,branch-true-2,
            extra-true
          false_values: >-
            service-false,environment-false,test-false,env-false,branch-false,
            service-false-2,environment-false-2,test-false-2,env-false-2,branch-false-2,
            extra-false

      - name: Check Error Output
        run: |
          if [[ "${{ steps.ternary_error.outcome }}" == "failure" ]]; then
            echo "✅ Error test passed: Action failed as expected when exceeding maximum conditions"
          else
            echo "❌ Error test failed: Action should have failed when exceeding maximum conditions"
            exit 1
          fi