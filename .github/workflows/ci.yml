name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
        required: false
      branch:
        type: choice
        options:
          - qa
          - dev
        description: Select the branch
        required: false
        default: qa
      test:
        type: string
        description: Select the test
        required: false
      service:
        description: Which service to be built. game or batch or etc...
        required: false
        type: choice
        options:
          - game
          - batch
      env:
        type: string
        description: Select the env
        required: false


permissions:
  contents: read

jobs:
  build-and-push-docker:
    name: Build and Push Docker
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000

    env:
      TEST_TAG: localhost:5001/actions/ternary-operator:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Variable
        run: |
          echo "SERVICE=${{ github.event.inputs.service || 'game' }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment || 'qa' }}" >> $GITHUB_ENV
          echo "TEST=${{ github.event.inputs.test || 'prod' }}" >> $GITHUB_ENV
          echo "ENV=${{ github.event.inputs.env || 'xov' }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.inputs.branch || 'qa' }}" >> $GITHUB_ENV

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Build the Container
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.TEST_TAG }}

      - name: Run the Container
        env:
          INPUT_CONDITIONS: 'SERVICE == game || SERVICE == batch, ENVIRONMENT == dev, TEST == prod, ENV == xov, BRANCH == dev'
          INPUT_TRUE_VALUES: 'service-true,environment-true,test-true,env-true,branch-true'
          INPUT_FALSE_VALUES: 'service-false,environment-false,test-false,env-false,branch-false'
        run: |
          docker run \
          --env INPUT_CONDITIONS="${{ env.INPUT_CONDITIONS }}" \
          --env INPUT_TRUE_VALUES="${{ env.INPUT_TRUE_VALUES }}" \
          --env INPUT_FALSE_VALUES="${{ env.INPUT_FALSE_VALUES }}" \
          --volume ${{ github.workspace }}:/usr/src \
          --rm ${{ env.TEST_TAG }}

  test-action:
    name: Test Extract Commit Action
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Variable
        run: |
          echo "SERVICE=${{ github.event.inputs.service || 'game' }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment || 'qa' }}" >> $GITHUB_ENV
          echo "TEST=${{ github.event.inputs.test || 'prod' }}" >> $GITHUB_ENV
          echo "ENV=${{ github.event.inputs.env || 'xov' }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.inputs.branch || 'qa' }}" >> $GITHUB_ENV

      - name: Test Local Action
        id: ternary
        uses: ./
        with:
          conditions: 'SERVICE == game || SERVICE == batch, ENVIRONMENT == dev, TEST == prod, ENV == xov, BRANCH == dev'
          true_values: 'service-true,environment-true,test-true,env-true,branch-true'
          false_values: 'service-false,environment-false,test-false,env-false,branch-false'

      - name: Print Output
        run: |
          echo "First condition result: ${{ steps.ternary.outputs.output_1 }}"
          echo "Second condition result: ${{ steps.ternary.outputs.output_2 }}"
          echo "Third condition result: ${{ steps.ternary.outputs.output_3 }}"
          echo "Fourth condition result: ${{ steps.ternary.outputs.output_4 }}"
          echo "Fifth condition result: ${{ steps.ternary.outputs.output_5 }}"